# Next read the column values. n = 18 as we have 3 column names and 15 values.
read.filename <- file("C:/Users/VWaghmare/R/binmtcars.dat", "rb")
bindata <- readBin(read.filename, integer(),  n = 18)
# Print the data.
print(bindata)
library("XML")
install.packages("XML", repos = "http://www.omegahat.org/R")
install.packages("XML", repos = "http://www.omegahat.net/R")
install.packages("XML", repos = "http://www.omegahat.org/R", type = "source")
install.packages(c("XML", "XML2", "xml2r", "xml2relational"))
library(XML)
library("methods")
result < - xmlParse(file = "input.xml")
result < - xmlParse(file = "input.xml")
result < - xmlParse(file = "input.xml")
result < - xmlParse(file = "input.xml")
result < - xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
result < - xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
result < - xmlParse(file = "input.xml")
library(xml2)
library("methods")
result < - xmlParse(file = "input.xml")
result < - xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
result < - xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
library("XML")
library("methods")
result < - xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
result < - xmlParse(file = "C:/Users/VWaghmare/R/input.xml")
result < - xmlParse(file = "input.xml")
result <- xmlparse(file ="input.xml")
result <- xmlParse(file = "input.xml")
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
result <- xmlParse(file = "C:/Users/VWaghmare/AppData/Local/R/input.xml")
print(result)
x <-10:30
x
class(x)
2+4
50-20
50/5
5^4
5%%2
x==y
x <- 100
y <-200
x==y
x <- 100
y <-200
x==y
x !=y
x !=y
y>x
y>=x
ae.data
ae.data <- read.csv("C:\\Users\\VWaghmare\\R\\ae.csv")
ae.data
view(ae.data)
view(ae.data)
View(ae.data)
x <- ae.data[ae.data$USUBJID=='IC102-78-146' & ae.data$AETERM=='POISON IVY']
x <- ae.data[ae.data$USUBJID=='IC102-78-146' & ae.data$AETERM=='POISON IVY'.]
x <- ae.data[ae.data$USUBJID=='IC102-78-146' & ae.data$AETERM=='POISON IVY',]
x <- ae.data[ae.data$USUBJID=='IC102-78-146',]
x <- ae.data[ae.data$USUBJID=='IC102-78-146' & ae.data$AETERM=='POISON IVY',]
x
x <- ae.data[ae.data$USUBJID=='IC102-41-010' & ae.data$AETERM=='POISON IVY',]
x
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
num <- 3.7
num
typeof(num)
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
num <- 3.7
num
typeof(num)
x <- 10
x
calss(x)
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
num <- 3.7
num
typeof(num)
x <- 10
x
class(x)
y <- 10L
y
class(y)
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
num <- 3.7
num
typeof(num)
x <- c(10, 20, 30)
y <- c('A' 'B')
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
num <- 3.7
num
typeof(num)
x <- c(10, 20, 30)
y <- c('A', 'B')
mix = c(x, y)
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
num <- 3.7
num
typeof(num)
x <- c(10, 20, 30)
y <- c('A', 'B')
mix = c(x, y)
x <- ae.data[ae.data$USUBJID=='IC102-41-010' | ae.data$AETERM=='POISON IVY',]
x
selling <- 500
cost <- 250
profit = selling - cost
profit
num <- 3.7
num
typeof(num)
x <- c(10, 20, 30)
y <- c('A', 'B')
mix = c(x, y)
mix
print(mix)
x
typeof(x)
typeof(mix)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
dat <- drop_na(read.csv(url("https://www.dropbox.com/s/uhfstf6g36ghxwp/cces_sample_coursera.csv?raw=1")))
tbl1<- c(2, 4, 5, 8, 10)
out<-sum(tbl1)
print(out)
alpha<- c(1, 2, 3, 4, 5)
beta<- c( 6, 7,8, 9, 10)
my_dat<- data.frame(alpha, beta)
print(my_dat)
summary(my_dat$beta)
famin<- c(dat$faminc_new)
boxplot(famin,
main = "Vaishali's Boxplot of Family Income",
xlab = "Family Income"
)
famin<- c(dat$faminc_new)
boxplot(famin,
main = "Vaishali's Boxplot of Family Income",
xlab = "Family Income"
)
newdt <- dat %>%
mutate(
tax_scale = case_when(
CC18_325a == 1 & CC18_325d == 1 ~ 2,
CC18_325a == 1 & CC18_325d == 2 ~ 1,
CC18_325a == 2 & CC18_325d == 1 ~ 1,
CC18_325a == 2 & CC18_325d == 2 ~ 0,
# Add more conditions here if needed
TRUE ~ 0 # Default value if no other condition matches
),
new_col_recoded = recode(tax_scale, '0' = "Support for Neither", "1"= "Support of either", "2" = "Support for both")
)
head(newdt$tax_scale, 20)
table(newdt$tax_scale)
dat %>%
group_by(region) %>% summarize(Trump_Approval_Mean = mean(CC18_308a))
dat_ser <- dat %>% filter(dat$investor == 2 & dat$faminc_new %in% c( 5 ,6 ,7 ,8, 9, 10))
dat_ser %>% summarize("Mean Religion Imp." =mean(pew_religimp), "Median Religion Imp." = median(pew_religimp), "Standard Dev. Religion Imp." = sd(pew_religimp))
sum <- dat %>% summarize(Mean = mean(faminc_new), Median = median(faminc_new), "Std. Dev." = sd(faminc_new))
kable(sum,  format = "markdown",align = "c")
sum2<- data.frame(table(dat$pid7))
sum2$Var1 <- as.numeric(as.character(sum2$Var1))
ggplot(sum2, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "dimgray", width = 0.6) +
scale_x_continuous(breaks = seq(0, max(sum2$Var1), by = 2)) +
scale_y_continuous(breaks = seq(0, 250, by = 50)) +
labs(x = "Seven-Point Party ID", y = "Count") +
theme_minimal() +
theme(
#axis.title.x = element_blank(),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank()
)
#####DO NOT MODIFY THIS CODE
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
#####DO NOT MODIFY THIS CODE - This will import the survey data we have been working with in this course.
dat <- drop_na(read.csv(url("https://www.dropbox.com/s/uhfstf6g36ghxwp/cces_sample_coursera.csv?raw=1")))
dat <- drop_na(read.csv(url("https://www.dropbox.com/s/uhfstf6g36ghxwp/cces_sample_coursera.csv?raw=1")))
tbl1<- c(2, 4, 5, 8, 10)
out<-sum(tbl1)
print(out)
alpha<- c(1, 2, 3, 4, 5)
beta<- c( 6, 7,8, 9, 10)
my_dat<- data.frame(alpha, beta)
print(my_dat)
summary(my_dat$beta)
famin<- c(dat$faminc_new)
boxplot(famin,
main = "Vaishali's Boxplot of Family Income",
xlab = "Family Income"
)
dat_sub<- dat %>% filter(region %in% c(1, 2), gender==1, marstat == 1, newsint==1)
str(dat_sub)
dat_sub<- dat %>% filter(region %in% c(1, 2), gender==1, marstat == 1, newsint==1)
frq<- table(dat_sub$investor)
print(frq)
newdt <- dat %>%
mutate(
tax_scale = case_when(
CC18_325a == 1 & CC18_325d == 1 ~ 2,
CC18_325a == 1 & CC18_325d == 2 ~ 1,
CC18_325a == 2 & CC18_325d == 1 ~ 1,
CC18_325a == 2 & CC18_325d == 2 ~ 0,
# Add more conditions here if needed
TRUE ~ 0 # Default value if no other condition matches
),
new_col_recoded = recode(tax_scale, '0' = "Support for Neither", "1"= "Support of either", "2" = "Support for both")
)
head(newdt$tax_scale, 20)
table(newdt$tax_scale)
dat %>%
group_by(region) %>% summarize(Trump_Approval_Mean = mean(CC18_308a))
dat_ser <- dat %>% filter(dat$investor == 2 & dat$faminc_new %in% c( 5 ,6 ,7 ,8, 9, 10))
dat_ser %>% summarize("Mean Religion Imp." =mean(pew_religimp), "Median Religion Imp." = median(pew_religimp), "Standard Dev. Religion Imp." = sd(pew_religimp))
sum <- dat %>% summarize(Mean = mean(faminc_new), Median = median(faminc_new), "Std. Dev." = sd(faminc_new))
kable(sum,  format = "markdown",align = "c")
sum2<- data.frame(table(dat$pid7))
sum2$Var1 <- as.numeric(as.character(sum2$Var1))
ggplot(sum2, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "dimgray", width = 0.6) +
scale_x_continuous(breaks = seq(0, max(sum2$Var1), by = 2)) +
scale_y_continuous(breaks = seq(0, 250, by = 50)) +
labs(x = "Seven-Point Party ID", y = "Count") +
theme_minimal() +
theme(
#axis.title.x = element_blank(),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank()
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
tbl1<- c(2, 4, 5, 8, 10)
out<-sum(tbl1)
print(out)
alpha<- c(1, 2, 3, 4, 5)
beta<- c( 6, 7,8, 9, 10)
my_dat<- data.frame(alpha, beta)
print(my_dat)
summary(my_dat$beta)
famin<- c(dat$faminc_new)
boxplot(famin,
main = "Vaishali's Boxplot of Family Income",
xlab = "Family Income"
)
```{r problem5,include=TRUE,echo=TRUE}
dat_sub<- dat %>% filter(region %in% c(1, 2), gender==1, marstat == 1, newsint==1)
str(dat_sub)
```{r problem6,include=TRUE,echo=TRUE}
dat_sub<- dat %>% filter(region %in% c(1, 2), gender==1, marstat == 1, newsint==1)
frq<- table(dat_sub$investor)
print(frq)
newdt <- dat %>%
mutate(
tax_scale = case_when(
CC18_325a == 1 & CC18_325d == 1 ~ 2,
CC18_325a == 1 & CC18_325d == 2 ~ 1,
CC18_325a == 2 & CC18_325d == 1 ~ 1,
CC18_325a == 2 & CC18_325d == 2 ~ 0,
# Add more conditions here if needed
TRUE ~ 0 # Default value if no other condition matches
),
new_col_recoded = recode(tax_scale, '0' = "Support for Neither", "1"= "Support of either", "2" = "Support for both")
)
head(newdt$tax_scale, 20)
table(newdt$tax_scale)
dat %>%
group_by(region) %>% summarize(Trump_Approval_Mean = mean(CC18_308a))
dat_ser <- dat %>% filter(dat$investor == 2 & dat$faminc_new %in% c( 5 ,6 ,7 ,8, 9, 10))
dat_ser %>% summarize("Mean Religion Imp." =mean(pew_religimp), "Median Religion Imp." = median(pew_religimp), "Standard Dev. Religion Imp." = sd(pew_religimp))
sum <- dat %>% summarize(Mean = mean(faminc_new), Median = median(faminc_new), "Std. Dev." = sd(faminc_new))
kable(sum,  format = "markdown",align = "c")
sum2<- data.frame(table(dat$pid7))
sum2$Var1 <- as.numeric(as.character(sum2$Var1))
ggplot(sum2, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "dimgray", width = 0.6) +
scale_x_continuous(breaks = seq(0, max(sum2$Var1), by = 2)) +
scale_y_continuous(breaks = seq(0, 250, by = 50)) +
labs(x = "Seven-Point Party ID", y = "Count") +
theme_minimal() +
theme(
#axis.title.x = element_blank(),
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank()
)
tbl1<- c(2, 4, 5, 8, 10)
out<-sum(tbl1)
print(out)
alpha<- c(1, 2, 3, 4, 5)
beta<- c( 6, 7,8, 9, 10)
my_dat<- data.frame(alpha, beta)
print(my_dat)
summary(my_dat$beta)
load("C:/Users/VWaghmare/Downloads/Assignment Solutions.RData")
load("C:/Users/VWaghmare/Downloads/Assignment Solutions.RData")
library(tidyverse)
library(knitr)
library(lubridate)
setwd("C:/Users/VWaghmare/Git/C113/LabRecon")
#getwd()
library(haven)
#install.packages("Hmisc")
library("Hmisc")
#install.packages(c("openxlsx", "labelled"))
library(openxlsx)
library(labelled)
library(kableExtra)
sample<- read_sas("C:/Users/VWaghmare/Git/C113/LabRecon/Data/sample.sas7bdat")
View(sample)
visit <- read_sas("C:/Users/VWaghmare/Git/C113/LabRecon/Data/visit.sas7bdat")
visit_ <- visit %>% filter(DVSTAT == '1' & !(VISIT %in% c('Screening', 'Screen Fail'))) %>% select(SUBJID, VISIT, VISITNUM, DVSTAT)
View(visit_)
#merge sample and visit datasets on subject, visit and visitnum
sam_vis <- inner_join(sample, visit_, by = c("SUBJID", "VISIT", "VISITNUM"))
View(sam_vis)
dt <- sam_vis %>% select(SUBJID, SPSTAT, VISIT, VISITNUM, SPDTTM) %>%  mutate(SAMPLE_COL_DATE = as_date(dmy_hm(SPDTTM))) %>% mutate(Merge_Dt = as_date(dmy_hm(SPDTTM))) %>% mutate(VISNUM = case_when(
VISITNUM =="D1" ~ "V2",
VISITNUM =="D3" ~ "V3",
VISITNUM =="D8" ~ "V4",
VISITNUM =="D29" ~ "V5",
TRUE ~ " "
)) %>% mutate(edc_sub = SUBJID)
View(dt)
dt_ <- dt %>% mutate(EDC_VISIT = VISNUM)
View(dt_)
#import lab data
library(readr)
#create function to call csv file
read_data <- function(callfl) {
message(paste("Reading data from:", callfl)) # Optional: Show what's being read
# Check if the file exists before trying to read (Good Practice!)
if (!file.exists(callfl)) {
stop(paste("Error: File not found at", callfl)) # Stop execution if file missing
}
data <- readr::read_csv(callfl)
# ... process data ...
return(data)
}
path <- "C:/Users/VWaghmare/Git/C113/LabRecon/Data"
flname <- "C113_Lab_recon_2025-04-07.csv"
path_fl <- file.path(path, flname)
lab_dt <-read_data(path_fl)
#lab_dt<- read_csv("C:/Users/VWaghmare/Git/C113/LabRecon/Data/C113_Lab_recon_2025-04-07.csv")
View(lab_dt)
lab <- lab_dt %>% mutate(VISNUM = Visit, LAB_VISIT = Visit) %>% mutate(SUBJID = `Subject ID`) %>% mutate(Lab_Draw_date = as.Date(`Date Drawn`, format = "%m/%d/%Y")) %>%  mutate(Merge_Dt = as.Date(`Date Drawn`, format = "%m/%d/%Y"))
View(lab)
#merge lab data and EDC data
vislab<- full_join(dt_, lab, by =c("SUBJID", "VISNUM"))
View(vislab)
vislab_c <- vislab %>% mutate(flag = case_when(
is.na(edc_sub) & is.na(EDC_VISIT) ~ 'Not in EDC',
SPSTAT == '1' & is.na(`Subject ID`)~ 'Not in Lab',
EDC_VISIT == LAB_VISIT & SAMPLE_COL_DATE != Lab_Draw_date ~ 'Date mismatch',
SUBJID == `Subject ID` & EDC_VISIT == LAB_VISIT & SPSTAT == '0' & is.na(SAMPLE_COL_DATE)  ~ 'Sample collected Status is not correct and Sample collection Date is missing in EDC',
TRUE ~ " "
)
)
View(vislab_c)
final <- vislab_c  %>%  select(SUBJID, VISIT, VISNUM,  SAMPLE_COL_DATE, Lab_Draw_date, flag )
View(final)
dup_final <-duplicated(final)
final_nodup <- final[!dup_final,]
#View(final_nodup)
my_labels <- c(SUBJID = 'Subject ID',
VISIT = 'Visit in EDC',
VISNUM = 'Visit Number',
SAMPLE_COL_DATE = 'Sample Collection Date',
Lab_Draw_date = 'Lab Draw Date',
flag = 'Flag')
final_ <- final_nodup
#View(final_)
label(final_) <-as.list(my_labels[match(names(final_), names(my_labels))])
#View(final_)
final_c <- final_ %>% filter(flag != " ")
#View(final_c)
get_var_labels <- function(data) {
sapply(data, var_label)
}
# Get variable labels
var_labels <- get_var_labels(final_c)
# Create a copy of the data frame
final_with_labels <- final_c
View(final_with_labels)
# Replace column names with variable labels
colnames(final_with_labels) <- unname(var_labels)
cfl <- final_with_labels
View(cfl)
View(cfl)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
runApp('app_V2.R')
